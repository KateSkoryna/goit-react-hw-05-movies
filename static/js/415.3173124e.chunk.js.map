{"version":3,"file":"static/js/415.3173124e.chunk.js","mappings":"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","sources":["components/Gallery/Gallery.styled.jsx","components/Gallery/Gallery.jsx","hooks/usefetchItems.jsx","hooks/useFetchMovie.jsx","hooks/useFetchQuery.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 40px) / 2);\n  font-size: 26px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const Link = styled(NavLink)`\n  color: black;\n\n  &:hover,\n  &:focus {\n    color: red;\n    font-weight: 700;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MovieList, MovieItem, Link } from './Gallery.styled';\n\nconst Gallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieList>\n      {movies.map(({ id, title }) => (\n        <MovieItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </MovieItem>\n      ))}\n    </MovieList>\n  );\n};\n\nGallery.propTypes = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  })\n).isRequired;\n\nexport default Gallery;\n","import { fetchTrendData } from 'services/api';\nimport { useState, useEffect } from 'react';\n\nexport const useFetchItems = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const findTrendFilms = async () => {\n      try {\n        const moviesList = await fetchTrendData();\n        setMovies(movies => [...movies, ...moviesList]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    findTrendFilms();\n  }, []);\n\n  return { movies, isLoading };\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const useFetchInfo = (id, fetchInfo) => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const findMovieInfo = async () => {\n      try {\n        const movieInfo = await fetchInfo(id);\n        setMovieInfo(movieInfo);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    findMovieInfo();\n  }, [id, fetchInfo]);\n\n  return { movieInfo, isLoading };\n};\n\nuseFetchInfo.propTypes =\n  (PropTypes.string.isRequired, PropTypes.func.isRequired);\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchData } from 'services/api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport const useFetchQuery = () => {\n  const [value, setValue] = useState('');\n  const [movies, setMovies] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('movies')) ?? [];\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    window.localStorage.setItem('movies', JSON.stringify(movies));\n  }, [movies]);\n\n  useEffect(() => {\n    if (!value) {\n      return;\n    }\n    const findMovies = async () => {\n      try {\n        setIsLoading(true);\n        const moviesList = await fetchSearchData(value);\n        moviesList.length === 0\n          ? Notify.failure(\n              'Sorry! There is no photo with this name. Try something else!'\n            )\n          : setMovies(movies => [...movies, ...moviesList]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setSearchParams({ query: value });\n        setIsLoading(false);\n      }\n    };\n\n    findMovies();\n  }, [value, setSearchParams]);\n\n  const addValue = ({ inputValue }) => {\n    if (inputValue !== value) {\n      setValue(inputValue);\n      setMovies([]);\n    } else {\n      setValue(inputValue);\n    }\n  };\n\n  return { isLoading, movies, searchParams, addValue };\n};\n","import Gallery from 'components/Gallery';\nimport Loader from 'components/Loader';\nimport { useFetchItems } from 'hooks';\n\n const Home = () => {\n  const { movies, isLoading } = useFetchItems();\n  return (\n    <section>\n      <h1>Trandy Today</h1>\n      {isLoading && movies.length === 0 ? (\n        <Loader />\n      ) : (\n        <Gallery movies={movies} />\n      )}\n    </section>\n  );\n };\n\nexport default Home;\n","import axios from 'axios';\n\nconst KEY = 'fd7341fdf0f2e94a335192ece09ea376';\n\nconst fetchTrendData = async () => {\n  const url = 'https://api.themoviedb.org/3/trending/movie/week';\n  try {\n    const { data } = await axios.get(`${url}?api_key=${KEY}&page=1`);\n    return data.results;\n  } catch (error) {\n    console.error('Something wrong! Can not get full trends' + error);\n  }\n};\n\nconst fetchSearchData = async value => {\n  const url = 'https://api.themoviedb.org/3/search/movie';\n  try {\n    const { data } = await axios.get(\n      `${url}?api_key=${KEY}&query=${value}&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.error('Something wrong! Can not search films' + error);\n  }\n};\n\nconst fetchDataById = async id => {\n  const url = 'https://api.themoviedb.org/3/movie/';\n\n  try {\n    const { data } = await axios.get(`${url}${id}?api_key=${KEY}`);\n    return data;\n  } catch (error) {\n    console.error('Something wrong! Can not search films by ID' + error);\n  }\n};\n\nconst fetchDataByCast = async id => {\n  const url = 'https://api.themoviedb.org/3/movie/';\n\n  try {\n    const { data } = await axios.get(`${url}${id}/credits?api_key=${KEY}`);\n    return data;\n  } catch (error) {\n    console.error('Something wrong! Can not search films by ID' + error);\n  }\n};\n\nconst fetchDataByReviews = async id => {\n  const url = 'https://api.themoviedb.org/3/movie/';\n\n  try {\n    const { data } = await axios.get(`${url}${id}/reviews?api_key=${KEY}`);\n    return data;\n  } catch (error) {\n    console.error('Something wrong! Can not search films by ID' + error);\n  }\n};\n\nexport {\n  fetchTrendData,\n  fetchSearchData,\n  fetchDataById,\n  fetchDataByCast,\n  fetchDataByReviews,\n};\n"],"names":["MovieList","styled","MovieItem","Link","NavLink","movies","location","useLocation","map","id","title","to","state","from","useFetchItems","useState","setMovies","isLoading","setIsLoading","useEffect","findTrendFilms","fetchTrendData","moviesList","console","log","useFetchInfo","fetchInfo","movieInfo","setMovieInfo","findMovieInfo","propTypes","PropTypes","useFetchQuery","value","setValue","JSON","parse","window","localStorage","getItem","useSearchParams","searchParams","setSearchParams","setItem","stringify","findMovies","fetchSearchData","length","Notify","query","addValue","inputValue","KEY","axios","data","results","error","fetchDataById","fetchDataByCast","fetchDataByReviews"],"sourceRoot":""}